{
  "meta": {
    "$_GET": [
      {
        "type": "text",
        "name": "search_items"
      },
      {
        "type": "text",
        "name": "fromdate"
      },
      {
        "type": "text",
        "name": "todate"
      }
    ]
  },
  "exec": {
    "steps": [
      {
        "name": "",
        "module": "auth",
        "action": "restrict",
        "options": {
          "provider": "security",
          "permissions": [
            "write"
          ],
          "loginUrl": "/login",
          "forbiddenUrl": "/403-forbidden"
        }
      },
      {
        "name": "identity",
        "module": "auth",
        "action": "identify",
        "options": {
          "provider": "security"
        },
        "output": false,
        "meta": []
      },
      {
        "name": "",
        "module": "core",
        "action": "condition",
        "options": {
          "if": "{{!$_GET.search_items}}",
          "then": {
            "steps": {
              "name": "GetOrders",
              "module": "dbupdater",
              "action": "custom",
              "options": {
                "connection": "FoodApp",
                "sql": {
                  "query": "select ro.id, ro.order_id, ro.user_id, ro.net_order_amt, ro.total_amt, ro.discount, ro.ex_charge_amt, ro.ex_comm_amt, ro.delevery_amt, ro.user_name, ro.address, \nro.mobile, ro.whatsapp, ro.pin, ro.ps, ro.dist, ro.state, ro.status, ro.payment_status, ro.created_on::text, ro.updated_on::text, ro.order_assigned_to, ro.applied_promo_id, \nro.wallet_cashback_amt, ro.wallet_deduct_amt, ro.wallet_closing_amt, ro.rest_id, mc.fname, mc.lname, mc.mobile as user_mobile, mc.wallet_bal,\nmr.shop_name_en, mr.shop_logo, mr.shop_mobile_no, mr.address as shop_address, \nmc_del.fname as delivery_fname, mc_del.lname as delivery_lname, mc_del.mobile as delivery_mobile, mc_del.watsapp_no as delivery_whatsapp, (select pc.promo_code from promo_code pc where pc.id = ro.applied_promo_id) as promo_code \nfrom r_order ro \nleft join m_customer mc on (mc.id = ro.user_id)\nleft join m_customer mc_del on (mc_del.id = ro.order_assigned_to)\nleft join m_restaurant mr on (mr.id = ro.rest_id) \nwhere ro.created_on between @fromdate and @todate order by ro.id desc;",
                  "params": [
                    {
                      "name": "@fromdate",
                      "value": "{{$_GET.fromdate+' 00:00:00'}}",
                      "test": "2023-05-13 00:00:00"
                    },
                    {
                      "name": "@todate",
                      "value": "{{$_GET.todate+' 23:59:59'}}",
                      "test": "2023-05-13 23:59:59"
                    }
                  ]
                }
              },
              "output": true,
              "meta": [],
              "outputType": "array"
            }
          },
          "else": {
            "steps": {
              "name": "GetOrders",
              "module": "dbupdater",
              "action": "custom",
              "options": {
                "connection": "FoodApp",
                "sql": {
                  "query": "select ro.id, ro.order_id, ro.user_id, ro.net_order_amt, ro.total_amt, ro.discount, ro.ex_charge_amt, ro.ex_comm_amt, ro.delevery_amt, ro.user_name, ro.address, \nro.mobile, ro.whatsapp, ro.pin, ro.ps, ro.dist, ro.state, ro.status, ro.payment_status, ro.created_on::text, ro.updated_on::text, ro.order_assigned_to, ro.applied_promo_id, \nro.wallet_cashback_amt, ro.wallet_deduct_amt, ro.wallet_closing_amt, ro.rest_id, mc.fname, mc.lname, mc.mobile as user_mobile, mc.wallet_bal,\nmr.shop_name_en, mr.shop_logo, mr.shop_mobile_no, mr.address as shop_address, \nmc_del.fname as delivery_fname, mc_del.lname as delivery_lname, mc_del.mobile as delivery_mobile, mc_del.watsapp_no as delivery_whatsapp, (select pc.promo_code from promo_code pc where pc.id = ro.applied_promo_id) as promo_code \nfrom r_order ro \nleft join m_customer mc on (mc.id = ro.user_id)\nleft join m_customer mc_del on (mc_del.id = ro.order_assigned_to)\nleft join m_restaurant mr on (mr.id = ro.rest_id) \nwhere ro.created_on between @fromdate and @todate and (LOWER(mr.shop_name_en) LIKE @search or LOWER(mr.shop_mobile_no) LIKE @search or LOWER(mr.address) LIKE @search or LOWER(ro.order_id) LIKE @search or LOWER(mc_del.fname) LIKE @search or LOWER(mc_del.lname) LIKE @search or LOWER(mc_del.mobile) LIKE @search or LOWER(ro.payment_status) LIKE @search or LOWER(mc.fname) LIKE @search or LOWER(mc.lname) LIKE @search or LOWER(mc.fname) LIKE @search or LOWER(mc.mobile) LIKE @search) order by ro.id desc;",
                  "params": [
                    {
                      "name": "@fromdate",
                      "value": "{{$_GET.fromdate+' 00:00:00'}}",
                      "test": "2023-05-13 00:00:00"
                    },
                    {
                      "name": "@todate",
                      "value": "{{$_GET.todate+' 23:59:59'}}",
                      "test": "2023-05-13 23:59:59"
                    },
                    {
                      "name": "@search",
                      "value": "{{'%'+$_GET.search_items.lowercase()+'%'}}"
                    }
                  ]
                }
              },
              "output": true,
              "meta": [],
              "outputType": "array"
            }
          }
        },
        "outputType": "boolean"
      }
    ]
  }
}